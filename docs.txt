=========================================================================

Front-end : https://mern-jwt-auth.vercel.app/
API       : https://next-jwt-auth.herokuapp.com/

URL Setup for deployment:
Set URL in config.env with the front-end URL
Set 'destination' in next.config.js with the back-end URL 
    (until the top level-domain e.g. <.com>)

=========================================================================

MongoDB Atlas

- Create User
- Create Database (Choose Free Plan)
- Create Network Access (From anywhere: 0.0.0.0/0)

=========================================================================

Node & Backend initial setup:

Node:
- Create npm: npm init -y
- Create server.js file
- Setup package.json -> "main": "server.js"
- Setup package.json -> "start": "node server.js"

Backend:
- Create controllers, routes, models, middlewares and config folder
- Create config.env file (to store env variables)

Backend Dependencies:
npm i express mongoose bcryptjs jsonwebtoken nodemailer
npm i dotenv
npm i -D nodemon (if not already installed globally)

Run with nodemon: 
npm run server || nodemon server

=========================================================================

Front-end (Next.js) initial setup:

- Create client folder in root directory
- Change directory to client : cd client
- Create next app inside ../client : npx create-next-app .

Remove git repository from client folder (with bash):
rm -rf .git

Add 'proxy' (url of the express API) in package.json

Front-end Dependencies (inside client directory):
npm i @chakra-ui/react @emotion/react@^11 @emotion/styled@^11 framer-motion@^5
npm i @chakra-ui/icons
npm i axios

Run (Development):
npm run dev

=========================================================================

Git

After removing git repository from client:
- setup .gitignore in root directory : 
  Copy-paste from .gitignore in client directory
  Add: 'node_modules/' & 'config.env' & 'secret.txt'
- remove .gitignore in client directory

=========================================================================

Others

--- Create random string with node in terminal ---

node
require('crypto').randomBytes(35).toString('hex')

=========================================================================